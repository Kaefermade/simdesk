spring:
  application:
    name: acc-server-tools
  jackson:
    default-property-inclusion: NON_NULL
    deserialization:
      fail-on-unknown-properties: false
  datasource:
    url: jdbc:sqlite:./data/acc_leaderboard.db
    driver-class-name: org.sqlite.JDBC
  flyway:
    enabled: true
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  main:
    banner-mode: off
management:
  endpoints:
    enabled-by-default: false
    web:
      exposure:
        include: "info,health,prometheus"
  endpoint:
    health:
      enabled: true
    info:
      enabled: true
    prometheus:
      enabled: true
logging:
  level:
    ROOT: INFO
vaadin:
  productionMode: true
  heartbeatInterval: 60
  closeIdleSessions: true
  exclude-urls:
    - /api/**
    - /swagger-ui/**
    - /openapi/**
leaderboard:
  community-name: ${LEADERBOARD_COMMUNITY_NAME:}
  links:
    impressum: ${LEADERBOARD_IMPRESSUM_URL:}
    privacy: ${LEADERBOARD_PRIVACY_URL:}
  results:
    folder: ${LEADERBOARD_RESULTS_FOLDER:/opt/acc-server-tools/results}
    scan-interval: ${LEADERBOARD_RESULTS_SCAN_INTERVAL:PT1M}
    ignore-patterns: ${LEADERBOARD_RESULTS_IGNORE_PATTERNS:}
  auth:
    admin:
      username: ${AUTH_ADMIN_USERNAME:admin}
      password: ${AUTH_ADMIN_PASSWORD:#{null}}
springdoc:
  swagger-ui:
    disable-swagger-default-url: true
    path: /swagger-ui
  api-docs:
    path: /openapi
  paths-to-match:
    - /api/**
server:
  forward-headers-strategy: framework

---
spring:
  config:
    activate:
      on-profile: "development"
logging:
  level:
    de.sustineo.acc.servertools: DEBUG
    de.sustineo.acc.servertools.entities.mapper: INFO
vaadin:
  productionMode: false
  heartbeatInterval: 60
  closeIdleSessions: false

---
spring:
  config:
    activate:
      on-profile: "discord"
  security:
    oauth2:
      client:
        registration:
          discord:
            client-id: ${DISCORD_CLIENT_ID}
            client-secret: ${DISCORD_CLIENT_SECRET}
            clientAuthenticationMethod: client_secret_post
            authorizationGrantType: authorization_code
            scope:
              - identify
              - guilds
            redirectUri: "{baseUrl}/login/oauth2/code/discord"
        provider:
          discord:
            authorizationUri: https://discordapp.com/api/oauth2/authorize
            tokenUri: https://discordapp.com/api/oauth2/token
            userInfoUri: https://discordapp.com/api/users/@me
            user-name-attribute: username
auth:
  discord:
    token: ${DISCORD_TOKEN}
    guild-id: ${DISCORD_GUILD_ID}

